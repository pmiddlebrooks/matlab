function data = ccm_n2pc(subjectID, sessionID, alignEvent, plotFlag)

%%

if nargin == 0
subjectID = 'Broca';
sessionID = 'bp063n01';
<<<<<<< .mine
sessionID = 'bp046n02';
% subjectID = 'Xena';
% sessionID = 'xp056n01';
end
=======
% subjectID = 'Xena';
% sessionID = 'xp056n01';
>>>>>>> .r5644
if nargin < 3
    alignEvent = 'checkerOn';
end
if nargin < 4
    plotFlag = 1;
end
% Flag to determine whether we want to include stop trial analyses for the
% session
DO_STOPS = 1;




electrodeArray = eeg_electrode_map(subjectID);
nElectrode = length(electrodeArray);

switch subjectID
    case 'Broca'
        lElectrodeName = 'o1';
        rElectrodeName = 'o2';
    case 'Xena'
        lElectrodeName = 'f1';
        rElectrodeName = 'f2';
end
lElectrodeChannel = find(strcmp(lElectrodeName, electrodeArray));
rElectrodeChannel = find(strcmp(rElectrodeName, electrodeArray));


% Load the data
[dataFile, localDataPath, localDataFile] = data_file_path(subjectID, sessionID);
% If the file hasn't already been copied to a local directory, do it now
if exist(localDataFile, 'file') ~= 2
    copyfile(dataFile, localDataPath)
end
load(localDataFile);

% make sure there are as many electrodes as we expect- otherwise, alter
% user and return with empty data
if size(trialData.eegData, 2) < nElectrode
    fprintf('%s %s should have %d electrodes but seems to have % for the session', subjectID, sessionID, nElectrode, size(trialData.eegData, 1));
    data = [];
    return
end



if ~strcmp(SessionData.task.taskID, 'ccm')
    fprintf('Not a choice countermanding session, try again\n')
    return
end


% Convert cells to doubles if necessary
trialData = cell_to_mat(trialData);




% alignTime = trialData.checkerOn;
alignTime = trialData.(alignEvent);

baselineDuration = -99;   % relative to start of subject fixating
epochRange = [100 300];  % relative to alignEvent
displayRange = [-100, 800];  % relative to




if plotFlag
    nPlotColumn = 2;
    nPlotRow = 2;
    figureHandle = 654;
    [axisWidth, axisHeight, xAxesPosition, yAxesPosition]   = standard_figure(nPlotRow, nPlotColumn, figureHandle);
    
    % axes 
    lE = 1;
    rE = 2;
    ax(lE) = axes('units', 'centimeters', 'position', [xAxesPosition(2, 1) yAxesPosition(2, 1) axisWidth axisHeight]);
    hold(ax(lE), 'on')
    ax(rE) = axes('units', 'centimeters', 'position', [xAxesPosition(2, 2) yAxesPosition(2, 2) axisWidth axisHeight]);
    hold(ax(rE), 'on')
end




% *********    RIGHT NOW ONLY DOING GO TARGET TRIALS-- NEED TO EXPAND TO DISTRACTOR TRIALS AND STOP TRIALS


% Perform the anlalyses on go trials to the (correct) target
rightCheckerPct = 'all';
ssd = 'none';



% Trials to analyze
lContraGoTargetTrial = ccm_trial_selection(trialData, {'goCorrectTarget'}, rightCheckerPct, ssd, 'right');
lIpsiGoTargetTrial = ccm_trial_selection(trialData, {'goCorrectTarget'}, rightCheckerPct, ssd, 'left');
rIpsiGoTargetTrial= lContraGoTargetTrial;
rContraGoTargetTrial = lIpsiGoTargetTrial;

nLeftTrial = length(lIpsiGoTargetTrial);
nRightTrial = length(rIpsiGoTargetTrial);


% EEG data from the relevant trials and the correct channel
lContraEEG = trialData.eegData(lContraGoTargetTrial, lElectrodeChannel);
lIpsiEEG = trialData.eegData(lIpsiGoTargetTrial, lElectrodeChannel);
rContraEEG = trialData.eegData(rContraGoTargetTrial, rElectrodeChannel);
rIpsiEEG = trialData.eegData(rIpsiGoTargetTrial, rElectrodeChannel);


% Vectors of alignment times for the EEG data
lAlignTime = alignTime(lIpsiGoTargetTrial);
rAlignTime = alignTime(rIpsiGoTargetTrial);

lSaccTime = trialData.responseOnset(lIpsiGoTargetTrial);
rSaccTime = trialData.responseOnset(rIpsiGoTargetTrial);

% Loop through trials and create aligned EEG data for contralateral and
% ipsilateral electrodes
% left electrode, contralateral
lContraBaseline = nan(nRightTrial, abs(baselineDuration)+1);
lContraBaselineShift = nan(nRightTrial, 1);
lContraEEGAlign = nan(nRightTrial, 1+displayRange(2) - displayRange(1));
% right electrode, ipsilateral
rIpsiBaseline = nan(nRightTrial, abs(baselineDuration)+1);
rIpsiBaselineShift = nan(nRightTrial, 1);
rIpsiEEGAlign = nan(nRightTrial, 1+displayRange(2) - displayRange(1));
% left electrode, ipsilateral
lIpsiBaseline = nan(nLeftTrial, abs(baselineDuration)+1);
lIpsiBaselineShift = nan(nLeftTrial, 1);
lIpsiEEGAlign = nan(nLeftTrial, 1+displayRange(2) - displayRange(1));
% right electrode, contralateral
rContraBaseline = nan(nLeftTrial, abs(baselineDuration)+1);
rContraBaselineShift = nan(nLeftTrial, 1);
rContraEEGAlign = nan(nLeftTrial, 1+displayRange(2) - displayRange(1));

% right hemifield loop
for iTrial = 1 : nRightTrial
    % left electrode, contralateral
    lContraBaseline(iTrial,:) = lContraEEG{iTrial}(rAlignTime(iTrial) + baselineDuration : rAlignTime(iTrial));
    lContraBaselineShift(iTrial) = mean(lContraBaseline(iTrial,:));
    lContraEEG{iTrial}(rSaccTime(iTrial) : end) = nan;
    lContraEEGAlign(iTrial, :) = lContraEEG{iTrial}(rAlignTime(iTrial) + displayRange(1) : rAlignTime(iTrial) + displayRange(2)) - lContraBaselineShift(iTrial);
    % right electrode, ipsilateral
    rIpsiBaseline(iTrial,:) = rIpsiEEG{iTrial}(rAlignTime(iTrial) + baselineDuration : rAlignTime(iTrial));
    rIpsiBaselineShift(iTrial) = mean(rIpsiBaseline(iTrial,:));
    rIpsiEEG{iTrial}(rSaccTime(iTrial) : end) = nan;
    rIpsiEEGAlign(iTrial, :) = rIpsiEEG{iTrial}(rAlignTime(iTrial) + displayRange(1) : rAlignTime(iTrial) + displayRange(2)) - rIpsiBaselineShift(iTrial);
end
% left hemifield loop
for iTrial = 1 : nLeftTrial
    % right electrode, left target
    rContraBaseline(iTrial,:) = rContraEEG{iTrial}(lAlignTime(iTrial) + baselineDuration : lAlignTime(iTrial));
    rContraBaselineShift(iTrial) = mean(rContraBaseline(iTrial,:));
<<<<<<< .mine
    rContraEEG{iTrial}(lSaccTime(iTrial) : end) = nan;
    rContraEEGAlign(iTrial, :) = rContraEEG{iTrial}(lAlignTime(iTrial) + displayRange(1) : lAlignTime(iTrial) + displayRange(2)) - rContraBaselineShift(iTrial);
    % left electrode, left right
=======
    rContraEEGAlign(iTrial, :) = rContraEEG{iTrial}(lAlignTime(iTrial) + displayRange(1) : lAlignTime(iTrial) + displayRange(2)) - rContraBaseline(iTrial);
    % right electrode, ipsilateral
>>>>>>> .r5644
    lIpsiBaseline(iTrial,:) = lIpsiEEG{iTrial}(lAlignTime(iTrial) + baselineDuration : lAlignTime(iTrial));
    lIpsiBaselineShift(iTrial) = mean(lIpsiBaseline(iTrial,:));
<<<<<<< .mine
    lIpsiEEG{iTrial}(lSaccTime(iTrial) : end) = nan;
    lIpsiEEGAlign(iTrial, :) = lIpsiEEG{iTrial}(lAlignTime(iTrial) + displayRange(1) : lAlignTime(iTrial) + displayRange(2)) - lIpsiBaselineShift(iTrial);
=======
    lIpsiEEGAlign(iTrial, :) = lIpsiEEG{iTrial}(lAlignTime(iTrial) + displayRange(1) : lAlignTime(iTrial) + displayRange(2)) - lIpsiBaseline(iTrial);
>>>>>>> .r5644
end

% Difference waveforms:
lContraIpsiDiff = nanmean(lContraEEGAlign, 1) - nanmean(lIpsiEEGAlign, 1);
rContraIpsiDiff = nanmean(rContraEEGAlign, 1) - nanmean(rIpsiEEGAlign, 1);


if plotFlag

<<<<<<< .mine
    plot(ax(lE), nanmean(lContraEEGAlign, 1), 'r', 'linewidth', 2)
    plot(ax(lE), nanmean(lIpsiEEGAlign, 1), 'b', 'linewidth', 2)
=======
    plot(ax(lE), mean(lContraEEGAlign, 1), 'r', 'linewidth', 2)
    plot(ax(lE), mean(lIpsiEEGAlign, 1), 'b', 'linewidth', 2)
>>>>>>> .r5644
    plot(ax(lE), lContraIpsiDiff, 'k', 'linewidth', 2)
    ylim(ax(lE), [-.015 .015])
    plot(ax(lE), [-displayRange(1) -displayRange(1)], ylim(ax(lE)))
    xlim(ax(lE), [0 length(lContraEEGAlign)])

<<<<<<< .mine
    plot(ax(rE), nanmean(rContraEEGAlign, 1), 'r', 'linewidth', 2)
    plot(ax(rE), nanmean(rIpsiEEGAlign, 1), 'b', 'linewidth', 2)
=======
    plot(ax(rE), mean(rContraEEGAlign, 1), 'r', 'linewidth', 2)
    plot(ax(rE), mean(rIpsiEEGAlign, 1), 'b', 'linewidth', 2)
>>>>>>> .r5644
    plot(ax(rE), rContraIpsiDiff, 'k', 'linewidth', 2)
    ylim(ax(rE), [-.015 .015])
    plot(ax(rE), [-displayRange(1) -displayRange(1)], ylim(ax(rE)))
    xlim(ax(rE), [0 length(rContraEEGAlign)])
end

<<<<<<< .mine
data.lContraEEGAlign  = lContraEEGAlign;
data.rIpsiEEGAlign    = rIpsiEEGAlign;
data.rContraEEGAlign  = rContraEEGAlign;
data.lIpsiEEGAlign    = lIpsiEEGAlign;
data.alignTime  = -displayRange(1);




=======
% 
% 
% data.contraEEG  = contraEEG;
% data.ipsiEEG    = ipsiEEG;
% data.alignTime  = -displayRange(1);




>>>>>>> .r5644
end