function [Mx LwLm UpLm RL Odds]=cpConf(Data,Crit)%% Computes the relative likelihoods of the% observed data for diffferent assumptions about where the change point% is. The resultling likelihood-vs-cp function is used to set% confidence intervals.%% Syntax [Mx LwLm UpLm RL Odds]=cpConf(Data,Crit)%% Data must be a column vector of either%   real values, which are assumed to be exponentially distributed%   interevent intervals;%%   or, binary values (0's and 1's), which are assumed to be successive%   successes and failures;%%   or, positive integers, which are assumed to be successive draws from a%   Poisson distribution.%% Crit is a relative likelihood criterion for the confidence limit. A value% of .05 sets the limit at the point beyond which the likelihood function% remains less than 5% of the maximum likelihood.%% The function assumes that there is at most 1 change point. Mx is the% maximum likelihood estimate of where that change point is; LwLm is the% lower (earlier) limit beyond which the relative likelihood remains below% Crit; UpLm is the upper (later) limit beyond which the relative% likelihood remains below Crit. The relative likelihood function is% generally not monotonic: it may dip below Crit several times before% remaining there. RL is the complete relative likelihood function: it% gives the likelihood for every possible change point (normalized by the% maximum of the likelihood function). Odds is the Bayes Factor for the% comparison between the likelihood of the change model and the likelihood of% the no-change model. Values less than 1 mean that the odds favor the no-change% model%% The function generates a 2-panel plot. The upper panel shows the% cumulative record, Mx, LwLm and UpLm. The lower panel plots the% relative likelihood function and Crit (the critical level).if Crit>.5;    disp('error: criterion should be less than 0.5')    returnendif sum(mod(Data,1))~=0; % if the data are not integers        [LL,X,Y,Mx] = local_expo(Data); % then the data are assumed to be    % exponentially distributed interevent intervals    Flag = 1;    elseif sum([Data;Data==0])==length(Data); % if the data are binary        [LL,X,Y,Mx] = local_bino(Data);; % then they are assumed to be    % drawn from a Bernoulli distribution with probability of success, P,    % and probability of failure (1-P)        Flag = 2;    else % If the data are integers and not binary, they are assumed to be    % counts drawn from a Poisson distribution    [LL,X,Y,Mx] = local_pois(Data);        Flag = 3;    endN = length(Data);%%figuresubplot(2,1,1) % upper plot showing cumulative record, Mx, LwLM & UpLmstairs(X,Y,'k') % Cumulative recordif Flag==1     xlabel('Time')     ylabel('Cumulative Events')elseif Flag==2     xlabel('Trial')     ylabel('Cumulative Successes')else     xlabel('Trial')     ylabel('Cumulative Count')endhold on%%plot([X(1) X(end)],[Y(1) Y(end)],'--k') % line from origin to termination% of cumulative record. Slope is estimate of parameter in no-change model    plot([Mx Mx],ylim,'r') % solid vertical red line indicates% maximally likely estimate of change point%% Confidence LimitsRL=exp(LL'-max(LL)); % Relative likelihoodsLwLm=find(RL>Crit,1); % row before which all values of relative likelihood% are less than CritRLflip=flipdim(RL,1);UpLm=length(RL)-find(RLflip>Crit,1)+2; % row after which all values of relative% likelihood are less than Crit%%plot([X(LwLm) X(LwLm)],ylim,'r--')plot([X(UpLm) X(UpLm)],ylim,'r--')XlmTop=xlim;%%subplot(2,1,2) % lower plot: relative likelihood functionstairs(X(1:end-1),exp(LL-max(LL)),'k')        hold onplot(xlim,[Crit Crit],'k--') % Crit level of relative likelihood    % Schwartz criterion% likelihood of the cp model relative to the no-cp modelRLL=max(LL)-LL(end)-log(N); % The Schwartz criterion is the difference% in the two log likelihoods -.5(d1-d2)logN, where (d1-d2) is the difference in % the number of free parameters in the two models and N is the number of data. % There is one free parameter in the no-change model and 3 % in the change model, so half the difference is 1, so correction is minus logNOdds = exp(RLL);if Flag==1     xlabel('Time')else     xlabel('Trial')endylabel('Relative Likelihood of CP')xlim([XlmTop(1) XlmTop(2)]);Xlm=xlim;Ylm=ylim;text(.05*(Xlm(2)-Xlm(1)),.95*(Ylm(2)-Ylm(1)),['Odds against no change = ' num2str(Odds) ':1'])%% Exponential subfunctionfunction [LL,X,Y,Mx] = local_expo(DataExp)% LL is the log likelihood function; X is the x-axis data coordinates% (elapsed time; Y is the y=axis data coordinates (cumulative event count);% Mx is the row of the X vector at which the deviation from the no-change% line is maximal (the elapsed time at the estimated change point)%%DataExpCumExp=cumsum(DataExp); % elapsed timefor r = 1:length(CumExp) % stepping through possible change points        T = CumExp(r); % Elapsed time        E1 = T/r; % estimated expected interevent interval up to change point        if r < length(CumExp) % haven't reached end of data                E2 = (CumExp(end)-T)/(length(CumExp)-r); % estimated expected        % interevent interval after the change point                LL(r) = sum([log(exppdf(DataExp(1:r),E1));...            log(exppdf(DataExp(r+1:end),E2))]);        % the log likelihood of the data assuming the change point is at r            else % have reached end of data                LL(r) = sum(log(exppdf(DataExp(1:end),E1))); % log likelihood of the        % data on the no-change model (putative change point is at end of        % data sequence)            end % of if-else    end % of for loop stepping through possible change pointsX = [0;CumExp]; % vector of event times, including time 0Y = [0;(1:length(CumExp))']; % Cumulative event count vector[M,Rmx] = max(LL); % M = maximum likelihood; Rmx = row #Mx = X(Rmx+1);%% Binomial subfunctionfunction [LL,X,Y,Mx]=local_bino(DataBino)% LL is the log likelihood function; X is the x-axis coordinates% (cumulative number of trials); Y is the y-axis coordinate (cumulative% successes); Mx is the row of of the x-vector at which the deviation from% the no-change line is maximal (the trial number at the estimated change% point)CumBino = cumsum(DataBino);% R=cpd(CumBino);Rmx=R(end); % trial at which change is maximally% likely to have occurredfor r = 1:length(CumBino) % stepping through possible change points        P1 = CumBino(r)/r; % Estimated probability of success before    % change point        if r < length(CumBino) % haven't reached end of data                P2 = (CumBino(end)-CumBino(r))/(length(CumBino)-r); % estimated        % probability of success after the change point                LL(r) = sum([log(binopdf(DataBino(1:r),1,P1));...            log(binopdf(DataBino(r+1:end),1,P2))]);        % the log likelihood of the data assuming the change point is at r            else % have reached end of data                LL(r) = sum(log(binopdf(DataBino(1:end),1,P1))); % log likelihood of the        % data on the no-change model (because putative change point is at    % end of data sequence)            end % of if-else    end % of for loop stepping through possible change pointsX = [0;(1:length(CumBino))'];Y = [0;CumBino];[M,Rmx] = max(LL);Mx=X(Rmx+1);%% Poisson subfunctionfunction [LL,X,Y,Mx]=local_pois(DataPois)% LL is the log likelihood function; X is the x-axis coordinates% (cumulative number of trials); Y is the y-axis coordinate (cumulative% successes); Mx is the row of of the x-vector at which the deviation from% the no-change line is maximal (the trial number at the estimated change% point)CumPois = cumsum(DataPois);% R=cpd(CumPois);Rmx=R(end); % trial at which change is maximally% likely to have occurredfor r = 1:length(CumPois) % stepping through possible change points        M1 = CumPois(r)/r; % Mean count before putative change point        if r < length(CumPois) % haven't reached end of data                M2 = (CumPois(end)-CumPois(r))/(length(CumPois)-r); % Mean count        % after putative change point                LL(r) = sum([log(poisspdf(DataPois(1:r),M1));...            log(poisspdf(DataPois(r+1:end),M2))]);        % the log likelihood of the data assuming the change point is at r            else % have reached end of data                LL(r) = sum(log(poisspdf(DataPois(1:end),M1))); % log likelihood of the        % data on the no-change model (because putative change point is at    % end of data sequence)            end % of if-else    end % of for loop stepping through possible change pointsX = [0;(1:length(CumPois))'];Y = [0;CumPois];[M,Rmx] = max(LL);Mx=X(Rmx+1);
