function sig = lowpass(sig,stopfreq)
%UNTITLED Returns a discrete-time filter object.

%
% M-File generated by MATLAB(R) 7.7 and the Signal Processing Toolbox 6.10.
%
% Generated on: 28-Jan-2009 11:12:22
%

% Butterworth Lowpass filter designed using FDESIGN.LOWPASS.

% All frequency values are in Hz.
% Fs = 1000;  % Sampling Frequency
% 
% Fpass = stopfreq;       % Passband Frequency
% Fstop = stopfreq + 1;   % Stopband Frequency
% Apass = 1;              % Passband Ripple (dB)
% Astop = 20;             % Stopband Attenuation (dB)
% match = 'stopband';     % Band to match exactly
% 
% % Construct an FDESIGN object and call its BUTTER method.
% h  = fdesign.lowpass(Fpass, Fstop, Apass, Astop, Fs);
% 
% disp(['Lowpass Filter with ' mat2str(Astop) 'db attenuation'])
% Hd = design(h, 'butter', 'MatchExactly', match);
% %filtered_signal = filter(Hd,sig);
% filtered_signal = filter(Hd,sig);
% % [EOF]
% 

%forward & reverse FIR filter (zero-phase shift)
%not sure why order == 200

parallelFlag = 0;
if matlabpool('size') > 0; parallelFlag = 1; end


Order = 20;
Fs = 1000;
[b a] = fir1(Order,(stopfreq/(Fs/2)));


%if matrix, do trial-by-trial; otherwise just filter vector
if isvector(sig)
    sig = filtfilt(b,a,sig);
else
    if parallelFlag
        parfor trl = 1:size(sig,1)
        %sig(trl,1:size(sig,2)) = filtfilt(b,a,sig(trl,:));
        sig(trl,:) = filtfilt(b,a,sig(trl,:));
        end
    else
        parfor trl = 1:size(sig,1)
            %sig(trl,1:size(sig,2)) = filtfilt(b,a,sig(trl,:));
            sig(trl,:) = filtfilt(b,a,sig(trl,:));
        end
    end
end